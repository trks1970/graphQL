plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2' apply false
    id 'io.spring.dependency-management' version '1.1.0' apply false

    id 'com.github.bjornvester.xjc' version '1.6.0' apply false
    id "org.openapi.generator" version "6.3.0" apply false

    id "org.sonarqube" version "3.5.0.2730" apply false
    id "com.github.ben-manes.versions" version '0.45.0' apply false
    id "com.github.spotbugs" version "5.0.13" apply false
    id 'com.diffplug.spotless' version '6.14.0' apply false

    id "com.google.cloud.tools.jib" version "3.3.1" apply false

}


ext {
    versions = [
            // ordered alphabetically
            jsonNullable: '0.2.4',
            jsr305      : '3.0.2',
            lombok      : '1.18.24',
            mapstruct   : '1.5.3.Final',
            springCloud : '2021.0.5',
            springDoc   : '1.6.14',
            springEnvers: '3.0.0',
            checkStyle  : '10.7.0'
    ]
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'


    group = 'com.trks'
    version = '0.2.0'

    repositories {
        mavenCentral()
        mavenLocal()
    }
    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    compileJava {
        options.compilerArgs += ["-Xlint:unchecked"]
        options.compilerArgs += ["-Xlint:deprecation"]
    }

    bootJar {
        enabled = false
    }
    jar {
        enabled = true
        archiveBaseName = "${project.name}"
        archiveVersion = "${project.version}"
        archiveClassifier = ""
    }
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
        repositories {
            mavenLocal()
        }
    }
    tasks.withType(PublishToMavenLocal).configureEach {
        onlyIf {
            !project.name.endsWith("-service-be")
        }
    }

    tasks.named("publishToMavenLocal").configure {
        dependsOn jar
    }
}






